---
// Import du layout standard
import Layout from "../../layouts/layout.astro";
import { Picture } from "astro:assets";
import monImage from "../../assets/j.jpg";

// Récupérer le paramètre de langue depuis l'URL
export function getStaticPaths() {
  return [
    { params: { lang: "fr" } },
    { params: { lang: "en" } },
    { params: { lang: "de" } },
  ];
}

const lang = Astro.params.lang as "fr" | "en" | "de";

// Déterminer si le mode éco est actif en fonction de l'URL
const { pathname } = Astro.url;
const isEcoMode = pathname.includes("/eco");

// Titre et méta description pour chaque langue
const content = {
  fr: {
    title: "Josselin HANEL - Me contacter",
    description: "Contactez-moi pour discuter de vos besoins en site internet, application ou boutique en ligne. Je vous répondrai rapidement pour échanger sur votre projet.",
    pageTitle: "Me contacter",
    introText: "Vous avez un projet en tête ? Un site internet à créer ou à refaire ? Contactez-moi par mail ou téléphone, et je vous répondrai dans les 24h.",
    emailTitle: "Par email",
    phoneTitle: "Par téléphone",
    phoneLabel: "Téléphone",
    locationTitle: "Où je travaille",
    locationText: "Basé à <strong>Rennes</strong>, je me déplace dans toute la Bretagne et travaille aussi à distance avec des clients partout en Europe.",
    availabilityTitle: "Disponibilité",
    availabilityText: "Je suis actuellement disponible pour de nouveaux projets à partir de <strong>fin Mai 2025</strong>.",
    preferenceTitle: "Comment je préfère travailler",
    preferenceText: "J'aime comprendre votre activité et vos besoins réels avant de proposer des solutions. Ça permet d'éviter les mauvaises surprises et d'avoir un résultat qui vous convient vraiment.",
    formTitle: "Envoyez-moi un message",
    formName: "Votre nom",
    formEmail: "Votre email",
    formPhone: "Votre téléphone (optionnel)",
    formSubject: "Sujet",
    formMessage: "Votre message",
    formMessagePlaceholder: "Décrivez brièvement votre projet ou vos questions. N'hésitez pas à préciser vos délais, budget ou attentes particulières.",
    formSubmit: "Envoyer",
    formSubmitting: "Envoi en cours...",
    formSuccess: "Merci ! Votre message a bien été envoyé. Je vous répondrai dans les plus brefs délais.",
    formError: "Oups ! Une erreur est survenue. Merci de réessayer ou de me contacter directement par email.",
    // Options de sujet prédéfinies 
    subjectOptions: {
      quote: "Demande de devis",
      info: "Renseignements",
      partnership: "Partenariat",
      other: "Autre sujet"
    },
    // Text après le formulaire
    afterFormText: "Je vous répondrai généralement sous 24h. Si votre demande est urgente, n'hésitez pas à m'appeler directement.",
    requiredField: "Ce champ est requis"
  },
  en: {
    title: "Josselin HANEL - Contact Me",
    description: "Contact me to discuss your website, application or e-commerce needs. I will respond promptly to discuss your project.",
    pageTitle: "Contact Me",
    introText: "Have a project in mind? Need a new website or want to upgrade your existing one? Feel free to reach out by email or phone, and I'll get back to you within 24 hours.",
    emailTitle: "By email",
    phoneTitle: "By phone",
    phoneLabel: "Phone",
    locationTitle: "Where I work",
    locationText: "Based in <strong>Rennes, France</strong>, I work throughout Brittany and also remotely with clients across Europe.",
    availabilityTitle: "Availability",
    availabilityText: "I am currently available for new projects starting <strong>end of May 2025</strong>.",
    preferenceTitle: "How I prefer to work",
    preferenceText: "I like to thoroughly understand your business and actual needs before proposing solutions. This helps avoid surprises and ensures a result that truly meets your expectations.",
    formTitle: "Send me a message",
    formName: "Your name",
    formEmail: "Your email",
    formPhone: "Your phone (optional)",
    formSubject: "Subject",
    formMessage: "Your message",
    formMessagePlaceholder: "Briefly describe your project or questions. Feel free to include details about your timeline, budget, or specific requirements.",
    formSubmit: "Send",
    formSubmitting: "Sending...",
    formSuccess: "Thank you! Your message has been sent successfully. I will respond as soon as possible.",
    formError: "Oops! An error occurred. Please try again or contact me directly via email.",
    // Predefined subject options 
    subjectOptions: {
      quote: "Quote request",
      info: "Information request",
      partnership: "Partnership opportunity",
      other: "Other inquiry"
    },
    // Text after the form
    afterFormText: "I typically respond within 24 hours. For urgent matters, please don't hesitate to call me directly.",
    requiredField: "This field is required"
  },
  de: {
    title: "Josselin HANEL - Kontakt",
    description: "Kontaktieren Sie mich, um Ihre Website-, Anwendungs- oder E-Commerce-Anforderungen zu besprechen. Ich werde umgehend antworten, um Ihr Projekt zu besprechen.",
    pageTitle: "Kontakt",
    introText: "Haben Sie ein Projekt im Sinn? Benötigen Sie eine neue Website oder möchten Sie Ihre bestehende aktualisieren? Kontaktieren Sie mich per E-Mail oder Telefon, und ich melde mich innerhalb von 24 Stunden bei Ihnen.",
    emailTitle: "Per E-Mail",
    phoneTitle: "Per Telefon",
    phoneLabel: "Telefon",
    locationTitle: "Wo ich arbeite",
    locationText: "Mit Sitz in <strong>Rennes, Frankreich</strong>, arbeite ich in der gesamten Bretagne und auch remote mit Kunden in ganz Europa.",
    availabilityTitle: "Verfügbarkeit",
    availabilityText: "Ich bin derzeit für neue Projekte ab <strong>Ende Mai 2025</strong> verfügbar.",
    preferenceTitle: "Wie ich am liebsten arbeite",
    preferenceText: "Ich möchte Ihr Unternehmen und Ihre tatsächlichen Bedürfnisse verstehen, bevor ich Lösungen vorschlage. Dies hilft, Überraschungen zu vermeiden und ein Ergebnis zu gewährleisten, das Ihren Erwartungen wirklich entspricht.",
    formTitle: "Senden Sie mir eine Nachricht",
    formName: "Ihr Name",
    formEmail: "Ihre E-Mail",
    formPhone: "Ihre Telefonnummer (optional)",
    formSubject: "Betreff",
    formMessage: "Ihre Nachricht",
    formMessagePlaceholder: "Beschreiben Sie kurz Ihr Projekt oder Ihre Fragen. Geben Sie gerne Details zu Ihrem Zeitplan, Budget oder spezifischen Anforderungen an.",
    formSubmit: "Senden",
    formSubmitting: "Wird gesendet...",
    formSuccess: "Vielen Dank! Ihre Nachricht wurde erfolgreich gesendet. Ich werde so schnell wie möglich antworten.",
    formError: "Hoppla! Ein Fehler ist aufgetreten. Bitte versuchen Sie es erneut oder kontaktieren Sie mich direkt per E-Mail.",
    // Vordefinierte Betreffoptionen 
    subjectOptions: {
      quote: "Angebotsanfrage",
      info: "Informationsanfrage",
      partnership: "Kooperationsmöglichkeit",
      other: "Andere Anfrage"
    },
    // Text nach dem Formular
    afterFormText: "Ich antworte in der Regel innerhalb von 24 Stunden. Bei dringenden Angelegenheiten können Sie mich gerne direkt anrufen.",
    requiredField: "Dieses Feld ist erforderlich"
  },
};

// Utiliser la langue demandée ou français par défaut
const t = content[lang] || content.fr;

// Contact info
const contactInfo = {
  email: "josshanel[at]gmail.com",
  phone: "+33 7 81 33 97 68",
  locations: ["Rennes", "Nantes", "Paris", "Berlin"],
  socials: [
    {
      name: "LinkedIn",
      url: "https://www.linkedin.com/in/josselin-hanel-030a8a358/",
      icon: "linkedin"
    },
    {
      name: "GitHub",
      url: "https://github.com/KewneWhimsy/",
      icon: "github"
    }
  ]
};
---

<Layout title={t.title} description={t.description} lang={lang} isEcoMode={isEcoMode}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8 border-b border-accent pb-2">
      {t.pageTitle}
    </h1>
    
    <div class="flex flex-col lg:flex-row gap-8 mb-12">
      <!-- Informations de contact -->
      <div class="lg:w-1/2">
        <p class="mb-8 text-lg">
          {t.introText}
        </p>
        
        <div class="bg-secondary bg-opacity-30 p-6 rounded-lg mb-6">
          <!-- Email -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-accent mb-2">{t.emailTitle}</h2>
            <p class="flex items-center text-link">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
              <span>{contactInfo.email}</span>
            </p>
          </div>
          
          <!-- Téléphone -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-accent mb-2">{t.phoneTitle}</h2>
            <p class="flex items-center text-link">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
              <span class="select-all">{contactInfo.phone}</span>
            </p>
          </div>
          
          <!-- Localisation -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-accent mb-2">{t.locationTitle}</h2>
            <p set:html={t.locationText}></p>
          </div>
          
          <!-- Disponibilité -->
          <div>
            <h2 class="text-xl font-semibold text-accent mb-2">{t.availabilityTitle}</h2>
            <p set:html={t.availabilityText}></p>
          </div>
        </div>
        
        <!-- Comment je travaille -->
        <div class="bg-secondary bg-opacity-20 p-6 rounded-lg border-l-4 border-accent">
          <h2 class="text-xl font-semibold text-accent mb-2">{t.preferenceTitle}</h2>
          <p>{t.preferenceText}</p>
        </div>
      </div>
      
      <!-- Formulaire de contact -->
      <div class="lg:w-1/2">
        <div class="bg-secondary bg-opacity-10 p-6 rounded-lg">
          <h2 class="text-xl font-semibold text-accent mb-4">{t.formTitle}</h2>
          
          <form id="contact-form" class="space-y-4">
            <!-- Champ caché pour API Web3Forms -->
            <input type="hidden" name="access_key" value="2dcc3f1b-036f-48a7-987a-cdada0d05ae5" />
            <input type="hidden" name="from_name" value="Portfolio Contact" />
            
            <!-- Nom -->
            <div>
              <label for="name" class="block mb-1 font-medium">{t.formName} *</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                class="w-full p-2 border border-form bg-primary rounded-md" 
                required
              />
            </div>
            
            <!-- Email -->
            <div>
              <label for="email" class="block mb-1 font-medium">{t.formEmail} *</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                class="w-full p-2 border border-form bg-primary rounded-md" 
                required
              />
            </div>
            
            <!-- Téléphone -->
            <div>
              <label for="phone" class="block mb-1 font-medium">{t.formPhone}</label>
              <input 
                type="tel" 
                id="phone" 
                name="phone" 
                class="w-full p-2 border border-form bg-primary rounded-md"
              />
            </div>
            
            <!-- Sujet -->
            <div>
              <label for="subject" class="block mb-1 font-medium">{t.formSubject} *</label>
              <select 
                id="subject" 
                name="subject" 
                class="w-full p-2 border border-form bg-primary rounded-md"
                required
              >
                <option value={t.subjectOptions.quote}>{t.subjectOptions.quote}</option>
                <option value={t.subjectOptions.info}>{t.subjectOptions.info}</option>
                <option value={t.subjectOptions.partnership}>{t.subjectOptions.partnership}</option>
                <option value={t.subjectOptions.other}>{t.subjectOptions.other}</option>
              </select>
            </div>
            
            <!-- Message -->
            <div>
              <label for="message" class="block mb-1 font-medium">{t.formMessage} *</label>
              <textarea 
                id="message" 
                name="message" 
                rows="5" 
                class="w-full p-2 border border-form bg-primary rounded-md"
                placeholder={t.formMessagePlaceholder}
                required
              ></textarea>
            </div>
            
            <!-- Champ honeypot anti-spam -->
            <div class="hidden">
              <input type="text" name="botcheck" />
            </div>
            
            <!-- Bouton d'envoi -->
            <div class="flex justify-end">
              <button 
                type="submit" 
                id="submit-button" 
                class="cta-button"
              >
                {t.formSubmit}
              </button>
              
              <span id="form-spinner" style="display: none;" class="inline-flex items-center ml-3">
                <svg class="animate-spin -ml-1 mr-2 h-5 w-5 text-accent" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                {t.formSubmitting}
              </span>
            </div>
            
            <!-- Message de statut -->
            <div id="form-status" class="mt-4"></div>
          </form>
          
          <p class="mt-6 text-sm text-text-muted">{t.afterFormText}</p>
        </div>
      </div>
    </div>
  </div>
  
  <script define:vars={{ translations: t }}>
    document.addEventListener('DOMContentLoaded', setupContactForm);
    document.addEventListener('astro:page-load', setupContactForm);
    
    function setupContactForm() {
      const form = document.getElementById('contact-form');
      const formStatus = document.getElementById('form-status');
      const submitButton = document.getElementById('submit-button');
      const formSpinner = document.getElementById('form-spinner');
      
      if (!form || !formStatus || !submitButton || !formSpinner) return;
      
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Afficher le spinner et désactiver le bouton
        submitButton.disabled = true;
        formSpinner.style.display = 'inline-flex';
        formStatus.innerHTML = '';
        
        try {
          const formData = new FormData(form);
          
          // Vérifier le honeypot
          if (formData.get('botcheck')) {
            throw new Error('Bot detected!');
          }
          
          const response = await fetch('https://api.web3forms.com/submit', {
            method: 'POST',
            body: formData
          });
          
          const data = await response.json();
          
          if (data.success) {
            // Succès
            formStatus.innerHTML = `<div class="p-3 bg-accent bg-opacity-20 text-accent rounded">${translations.formSuccess}</div>`;
            form.reset();
          } else {
            // Erreur
            throw new Error(data.message || 'Something went wrong!');
          }
          
        } catch (error) {
          formStatus.innerHTML = `<div class="p-3 bg-red-500 bg-opacity-20 text-red-500 rounded">${translations.formError}</div>`;
          console.error('Form error:', error);
        } finally {
          // Réactiver le bouton et cacher le spinner
          submitButton.disabled = false;
          formSpinner.style.display = 'none';
        }
      });
    }
  </script>
</Layout>