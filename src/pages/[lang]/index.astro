---
// Imports
import Layout from "../../layouts/layout.astro";
import { Picture } from "astro:assets";
import monImage from "../../assets/j.jpg";
import objetImage from "../../assets/projects/objet01.png";
import esportImage from "../../assets/projects/esport01.png";

// Récupérer le paramètre de langue depuis l'URL
export function getStaticPaths() {
  return [
    { params: { lang: "fr" } },
    { params: { lang: "en" } },
    { params: { lang: "de" } },
  ];
}

const lang = Astro.params.lang as "fr" | "en" | "de";

// Titre et description de la page pour SEO (à traduire selon la langue)
const content = {
  fr: {
    title: "Josselin HANEL - Développeur Web Full Stack",
    description:
      "Portfolio de développeur web full stack avec une approche éco-responsable, basé à Rennes et disponible à Nantes, Berlin et en télétravail.",
    heroTitle: 'Développeur Web <span class="text-light">Full Stack</span>',
    heroText:
      "Je conçois des sites web et applications complètes, durables et performantes, en privilégiant des solutions économes en ressources.",
    projectsButton: "Voir mes projets",
    contactButton: "Me contacter",
    skillsTitle: "Compétences",
    projectsTitle: "Projets récents",
    viewAllProjectsButton: "Voir tous les projets",
    ctaTitle: "Intéressé par une collaboration?",
    ctaText:
      "Je suis disponible pour des missions freelance, des projets d'équipe ou des consultations en éco-conception web.",
  },
  en: {
    title: "Josselin HANEL - Full Stack Web Developer",
    description:
      "Portfolio of a full stack web developer with an eco-friendly approach, based in Rennes and available in Nantes, Berlin and remote work.",
    heroTitle: 'Full Stack <span class="text-light">Web Developer</span>',
    heroText:
      "I design complete, sustainable and high-performance websites and applications, prioritizing resource-efficient solutions.",
    projectsButton: "View my projects",
    contactButton: "Contact me",
    skillsTitle: "Skills",
    projectsTitle: "Recent projects",
    viewAllProjectsButton: "View all projects",
    ctaTitle: "Interested in working together?",
    ctaText:
      "I am available for freelance work, team projects or web eco-design consultations.",
  },
  de: {
    title: "Josselin HANEL - Full-Stack Webentwickler",
    description:
      "Portfolio eines Full-Stack-Webentwicklers mit umweltfreundlichem Ansatz, mit Sitz in Rennes und verfügbar in Nantes, Berlin und für Remote-Arbeit.",
    heroTitle: 'Full-Stack <span class="text-light">Webentwickler</span>',
    heroText:
      "Ich entwickle vollständige, nachhaltige und leistungsstarke Websites und Anwendungen mit ressourcenschonenden Lösungen.",
    projectsButton: "Meine Projekte",
    contactButton: "Kontakt",
    skillsTitle: "Fähigkeiten",
    projectsTitle: "Aktuelle Projekte",
    viewAllProjectsButton: "Alle Projekte ansehen",
    ctaTitle: "Interesse an einer Zusammenarbeit?",
    ctaText:
      "Ich bin verfügbar für Freiberufliche Arbeit, Teamprojekte oder Beratungen zum Web-Öko-Design.",
  },
};

// Utiliser la langue demandée ou français par défaut
const t = content[lang] || content.fr;

// Compétences à afficher avec traductions
const skills = [
  {
    category:
      lang === "fr" ? "Frontend" : lang === "en" ? "Frontend" : "Frontend",
    items: ["Astro", "CSS Pro", "Tailwind", "TypeScript", "HTMX", "Alpine.js"],
  },
  {
    category: lang === "fr" ? "Backend" : lang === "en" ? "Backend" : "Backend",
    items: ["Express", "WebSocket", "Elixir", "Phoenix"],
  },
  {
    category:
      lang === "fr"
        ? "Bases de données"
        : lang === "en"
          ? "Databases"
          : "Datenbanken",
    items: ["PostgreSQL", "MongoDB", "PostgREST", "Ecto"],
  },
  {
    category: lang === "fr" ? "Outils" : lang === "en" ? "Tools" : "Werkzeuge",
    items: ["Git", "Docker", "VS Code", "Lighthouse"],
  },
  {
    category:
      lang === "fr"
        ? "Méthodologies"
        : lang === "en"
          ? "Methodologies"
          : "Methoden",
    items: [
      lang === "fr"
        ? "Accessibilité"
        : lang === "en"
          ? "Accessibility"
          : "Barrierefreiheit",
      lang === "fr"
        ? "Performance"
        : lang === "en"
          ? "Performance"
          : "Performance",
      lang === "fr"
        ? "Éco-conception"
        : lang === "en"
          ? "Eco-design"
          : "Öko-Design",
      "UX/UI",
    ],
  },
];

// Projets à mettre en avant
const featuredProjects = [
  {
    title:
      lang === "fr"
        ? "Bibliothèque d'objets Quimper"
        : lang === "en"
          ? "Quimper Object Library"
          : "Quimper Objektbibliothek",
    description:
      lang === "fr"
        ? "Site de gestion pour une bibliothèque d'objets permettant le prêt et la réservation d'articles divers."
        : lang === "en"
          ? "Management website for an object library allowing the loan and reservation of various items."
          : "Management-Website für eine Objektbibliothek für Ausleihe und Reservierung verschiedener Artikel.",
    image: objetImage,
    tech: [
      "Astro",
      "CSS Pro",
      "TypeScript",
      "Alpine.js",
      "GitHub Actions",
    ],
    url: `/${lang}/projects/library`,
    ecoUrl: `/${lang}/projects/library/eco`,
  },
  {
    title:
      lang === "fr"
        ? "Application e-sport avec chat"
        : lang === "en"
          ? "E-sport Application with Chat"
          : "E-Sport-Anwendung mit Chat",
    description:
      lang === "fr"
        ? "Plateforme de gestion d'événements e-sport intégrant un système de chat en temps réel via WebSocket et HTMX. (entreprise fictive)"
        : lang === "en"
          ? "E-sport event management platform with a real-time chat system via WebSocket and HTMX. (fictional company)"
          : "E-Sport-Eventmanagement-Plattform mit einem Echtzeit-Chat-System über WebSocket und HTMX. (fiktives Unternehmen)",
    image: esportImage,
    tech: [
      "Astro",
      "Tailwind",
      "CSS Pro",
      "Alpine.js",
      "HTMX",
      "WebSocket",
      "Express",
      "Postgresql",
      "MongoDB",
    ],
    url: `/${lang}/projects/esport`,
    ecoUrl: `/${lang}/projects/esport/eco`,
  },
];
---

<Layout title={t.title} description={t.description} lang={lang}>
  <div class="container mt-3 mx-auto px-4 py-8">
    <!-- Section hero -->
    <section class="py-8 md:py-12">
      <div class="flex flex-col md:flex-row gap-8">
        <div class="md:w-2/3">
          <h1
            class="text-3xl md:text-4xl font-bold mb-4"
            set:html={t.heroTitle}
          />
          <p class="text-lg mb-6">
            {t.heroText}
          </p>
          <div class="flex flex-wrap gap-4">
            <a href={`/${lang}/projects`} class="btn-primary">
              {t.projectsButton}
            </a>
            <a href={`/${lang}/contact`} class="btn-secondary">
              {t.contactButton}
            </a>
          </div>
        </div>
        <div class="md:w-1/3">
          <div class="bg-secondary rounded-lg p-4">
            <Picture
              src={monImage}
              widths={[400, 600]}
              formats={["avif", "webp", "jpg"]}
              alt={`Josselin HANEL - ${lang === "fr" ? "Développeur Full Stack" : lang === "en" ? "Full Stack Developer" : "Full-Stack-Entwickler"}`}
              class="w-full h-auto object-cover rounded"
              data-astro-transition-persist="profile-image"
            />
          </div>
        </div>
      </div>
    </section>

    <!-- Section compétences -->
    <section class="py-8">
      <h2 class="text-2xl font-bold mb-6 border-b border-accent pb-2">
        {t.skillsTitle}
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        {
          skills.map((skill) => (
            <div class="bg-secondary bg-opacity-30 p-4 rounded-lg">
              <h3 class="text-lg font-semibold mb-3 text-light">
                {skill.category}
              </h3>
              <div class="flex flex-wrap gap-2">
                {skill.items.map((item) => (
                  <span class="px-2 py-1 bg-secondary rounded-full text-sm">
                    {item}
                  </span>
                ))}
              </div>
            </div>
          ))
        }
      </div>
    </section>

    <!-- Section projets en vedette -->
    <section class="py-8">
      <h2 class="text-2xl font-bold mb-6 border-b border-accent pb-2">
        {t.projectsTitle}
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
          featuredProjects.map((project) => (
          <div class="project-card w-full">
  <!-- Image du projet -->
  <div class="bg-primary bg-opacity-30 aspect-video w-full">
    <Picture
      src={project.image}
      widths={[400, 740, 1080]}
      sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
      formats={["avif", "webp", "jpg"]}
      alt={project.title}
      class="w-full h-full object-cover"
      loading="lazy"
    />
  </div>
  
  <!-- Contenu du projet (prendra l'espace variable) -->
  <div class="p-4 flex flex-col h-full">
    <div class="flex-1">
      <h3 class="text-xl font-bold mb-2">{project.title}</h3>
      <p class="mb-4">{project.description}</p>
      
      <!-- Technologies -->
      <div class="mb-4">
        <div class="flex flex-wrap gap-1.5">
          {project.tech.map((tech) => (
            <span class="px-2 py-0.5 border border-accent text-light rounded-full text-xs">
              {tech}
            </span>
          ))}
        </div>
      </div>
    </div>
    
    <!-- Boutons (toujours au bas de la carte) -->
    <div class="mt-auto">
      <div class="flex gap-3">
        <a href={project.url} class="btn-primary flex-1 text-center">
          {t.projectsButton}
        </a>
      </div>
    </div>
  </div>
</div>
          ))
        }
      </div>
      <div class="text-center mt-8">
        <!-- Bouton autonome complet avec changement de couleur de texte -->
        <a
          href={`/${lang}/projects`}
          style="
            display: inline-block;
            padding: 8px 16px;
            background-color: transparent;
            border: 1px solid var(--color-accent);
            color: var(--color-accent);
            border-radius: 4px;
            transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease;
          "
          onmouseover="this.style.transform='translateY(-1px)'; this.style.backgroundColor='rgba(77, 163, 77, 0.1)'; this.style.color='var(--color-text)';"
          onmouseout="this.style.transform='translateY(0)'; this.style.backgroundColor='transparent'; this.style.color='var(--color-accent)';"
        >
          {t.viewAllProjectsButton}
        </a>
      </div>
    </section>

    <!-- Section appel à l'action -->
    <section
      class="py-8 bg-secondary bg-opacity-30 rounded-lg text-center mt-8"
    >
      <h2 class="text-2xl font-bold mb-4">{t.ctaTitle}</h2>
      <p class="mb-6 max-w-lg mx-auto">{t.ctaText}</p>
      <!-- Bouton autonome primaire -->
      <a
        href={`/${lang}/contact`}
        style="
          display: inline-block;
          padding: 8px 16px;
          background-color: var(--color-accent);
          color: var(--color-primary);
          border-radius: 4px;
          transition: transform 0.3s ease, background-color 0.3s ease;
        "
        onmouseover="this.style.transform='translateY(-1px)'; this.style.backgroundColor='var(--color-accent-hover)';"
        onmouseout="this.style.transform='translateY(0)'; this.style.backgroundColor='var(--color-accent)';"
      >
        {t.contactButton}
      </a>
    </section>
  </div>
</Layout>
