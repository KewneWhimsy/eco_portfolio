---
// Import du layout avec mode éco activé
import Layout from '../../layouts/layout.astro';
import Picture from 'astro/components/Picture.astro';
import monImage from '../../assets/j.jpg';

// Récupérer le paramètre de langue depuis l'URL
export function getStaticPaths() {
  return [
    { params: { lang: 'fr' } },
    { params: { lang: 'en' } },
    { params: { lang: 'de' } }
  ];
}

const lang = Astro.params.lang as 'fr' | 'en' | 'de';

// Contenus communs pour toutes les langues
const commonSkills = {
  frontend: 'Frontend: HTML5, CSS3, JavaScript, HTMX, Alpine.js, Astro',
  backend: 'Backend: Express, WebSocket, Elixir, Phoenix',
};

// Projets à mettre en avant (version simplifiée pour le mode éco)
const featuredProjects = [
  { id: 'library', url: `/${lang}/projects/library/eco` },
  { id: 'esport', url: `/${lang}/projects/esport/eco` }
];

// Liste des catégories de compétences
const skillCategoriesKeys = ['frontend', 'backend', 'databases', 'methodologies'];

// Contenu traduit pour chaque langue
const content = {
  fr: {
    title: 'Josselin HANEL - Développeur Full Stack (Mode Éco)',
    description: 'Version éco-responsable de mon portfolio de développeur full stack, avec une empreinte carbone minimale.',
    heroTitle: 'Développeur Web Full Stack',
    heroText: 'Je conçois des sites web et applications complètes, durables et performantes.',
    projectsButton: 'Projets',
    contactButton: 'Contact',
    ecoModeTitle: 'Mode Éco activé',
    ecoModeText: 'Vous consultez actuellement la version ultra-légère de mon portfolio. Cette version:',
    ecoFeatures: [
      'Ne contient aucun JavaScript',
      'Utilise des images uniquement sur demande',
      'Limite les requêtes réseau au minimum',
      'Réduit considérablement l\'empreinte carbone'
    ],
    skillsTitle: 'Compétences',
    projectsTitle: 'Projets récents',
    viewProject: 'Voir le projet',
    skillCategories: {
      ...commonSkills,
      databases: 'Bases de données: PostgreSQL, MongoDB, PostgREST, Ecto',
      methodologies: 'Méthodologies: Accessibilité, Performance, Éco-conception, UX/UI'
    },
    projects: {
      library: {
        title: 'Bibliothèque d\'objets Quimper',
        description: 'Site de gestion pour une bibliothèque d\'objets permettant le prêt et la réservation.'
      },
      esport: {
        title: 'Application e-sport avec chat',
        description: 'Plateforme de gestion d\'événements e-sport avec chat en temps réel.'
      }
    },
    imageAlt: 'Photo de Josselin HANEL'
  },
  en: {
    title: 'Josselin HANEL - Full Stack Developer (Eco Mode)',
    description: 'Eco-friendly version of my full stack developer portfolio, with minimal carbon footprint.',
    heroTitle: 'Full Stack Web Developer',
    heroText: 'I design complete, sustainable and high-performance websites and applications.',
    projectsButton: 'Projects',
    contactButton: 'Contact',
    ecoModeTitle: 'Eco Mode activated',
    ecoModeText: 'You are currently viewing the ultra-lightweight version of my portfolio. This version:',
    ecoFeatures: [
      'Contains no JavaScript',
      'Uses images only on demand',
      'Limits network requests to a minimum',
      'Significantly reduces carbon footprint'
    ],
    skillsTitle: 'Skills',
    projectsTitle: 'Recent projects',
    viewProject: 'View project',
    skillCategories: {
      ...commonSkills,
      databases: 'Databases: PostgreSQL, MongoDB, PostgREST, Ecto',
      methodologies: 'Methodologies: Accessibility, Performance, Eco-design, UX/UI'
    },
    projects: {
      library: {
        title: 'Quimper Object Library',
        description: 'Management website for an object library allowing loans and reservations.'
      },
      esport: {
        title: 'E-sport Application with Chat',
        description: 'E-sport event management platform with real-time chat system.'
      }
    },
    imageAlt: 'Photo of Josselin HANEL'
  },
  de: {
    title: 'Josselin HANEL - Full-Stack-Entwickler (Öko-Modus)',
    description: 'Umweltfreundliche Version meines Full-Stack-Entwickler-Portfolios mit minimalem CO2-Fußabdruck.',
    heroTitle: 'Full-Stack Webentwickler',
    heroText: 'Ich entwickle vollständige, nachhaltige und leistungsstarke Websites und Anwendungen.',
    projectsButton: 'Projekte',
    contactButton: 'Kontakt',
    ecoModeTitle: 'Öko-Modus aktiviert',
    ecoModeText: 'Sie sehen gerade die ultraleichte Version meines Portfolios. Diese Version:',
    ecoFeatures: [
      'Enthält kein JavaScript',
      'Verwendet Bilder nur auf Anfrage',
      'Begrenzt Netzwerkanfragen auf ein Minimum',
      'Reduziert den CO2-Fußabdruck erheblich'
    ],
    skillsTitle: 'Fähigkeiten',
    projectsTitle: 'Aktuelle Projekte',
    viewProject: 'Projekt ansehen',
    skillCategories: {
      ...commonSkills,
      databases: 'Datenbanken: PostgreSQL, MongoDB, PostgREST, Ecto',
      methodologies: 'Methoden: Barrierefreiheit, Performance, Öko-Design, UX/UI'
    },
    projects: {
      library: {
        title: 'Quimper Objektbibliothek',
        description: 'Management-Website für eine Objektbibliothek für Ausleihe und Reservierung.'
      },
      esport: {
        title: 'E-Sport-Anwendung mit Chat',
        description: 'E-Sport-Eventmanagement-Plattform mit Echtzeit-Chat-System.'
      }
    },
    imageAlt: 'Foto von Josselin HANEL'
  }
};

// Utiliser la langue demandée ou français par défaut
const t = content[lang] || content.fr;

// Mode éco activé
const isEcoMode = true;
---

<Layout title={t.title} description={t.description} lang={lang} isEcoMode={isEcoMode}>
  <div class="container mx-auto px-4 py-8">
    <!-- Section hero simplifiée -->
    <section class="py-6 border-b border-secondary mb-6">
      <div class="flex flex-wrap gap-6 items-center">
        <div class="flex-1">
          <h1 class="text-2xl font-bold mb-3">
            {t.heroTitle}
          </h1>
          <p class="mb-4">
            {t.heroText}
          </p>
          <div class="flex flex-wrap gap-3">
            <a href={`/${lang}/projects/eco`} class="btn-primary">
              {t.projectsButton}
            </a>
            <a href={`/${lang}/contact/eco`} class="btn-secondary">
              {t.contactButton}
            </a>
          </div>
        </div>
        
        <Picture
          src={monImage}
          width={128}
          formats={["avif", "webp", "jpg"]}
          alt={t.imageAlt}
          class="w-32 h-32 flex-shrink-0 border-2 border-accent rounded"
          data-astro-transition-persist="profile-image"
        />
      </div>
    </section>

    <!-- Section d'intro sur l'éco-conception -->
    <section class="py-6 border-b border-secondary mb-6">
      <h2 class="text-xl font-bold mb-3">{t.ecoModeTitle}</h2>
      <p class="mb-3">
        {t.ecoModeText}
      </p>
      <ul class="list-disc pl-5 mb-3">
        {t.ecoFeatures.map(feature => (
          <li>{feature}</li>
        ))}
      </ul>
    </section>

    <!-- Section compétences simplifiée -->
    <section class="py-6 border-b border-secondary mb-6">
      <h2 class="text-xl font-bold mb-3">{t.skillsTitle}</h2>
      <ul class="list-disc pl-5">
        {skillCategoriesKeys.map(key => (
          <li class="mb-2">{t.skillCategories[key as keyof typeof t.skillCategories]}</li>
        ))}
      </ul>
    </section>

    <!-- Section projets simplifiée -->
    <section class="py-6">
      <h2 class="text-xl font-bold mb-4">{t.projectsTitle}</h2>
      <div class="space-y-6">
        {featuredProjects.map(project => (
          <div class="border-b border-secondary pb-4 mb-4">
            <h3 class="text-lg font-semibold mb-2">
              {t.projects[project.id as keyof typeof t.projects].title}
            </h3>
            <p class="mb-3">
              {t.projects[project.id as keyof typeof t.projects].description}
            </p>
            <a href={project.url} class="text-link">{t.viewProject}</a>
          </div>
        ))}
      </div>
    </section>
  </div>
</Layout>